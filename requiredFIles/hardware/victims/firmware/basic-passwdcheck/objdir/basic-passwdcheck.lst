   1               		.file	"basic-passwdcheck.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               		.cfi_sections	.debug_frame
  13               	delay_2_ms:
  14               	.LFB13:
  15               		.file 1 "basic-passwdcheck.c"
   1:basic-passwdcheck.c **** /*
   2:basic-passwdcheck.c ****     This file is part of the ChipWhisperer Example Targets
   3:basic-passwdcheck.c ****     Copyright (C) 2012-2015 NewAE Technology Inc.
   4:basic-passwdcheck.c **** 
   5:basic-passwdcheck.c ****     This program is free software: you can redistribute it and/or modify
   6:basic-passwdcheck.c ****     it under the terms of the GNU General Public License as published by
   7:basic-passwdcheck.c ****     the Free Software Foundation, either version 3 of the License, or
   8:basic-passwdcheck.c ****     (at your option) any later version.
   9:basic-passwdcheck.c **** 
  10:basic-passwdcheck.c ****     This program is distributed in the hope that it will be useful,
  11:basic-passwdcheck.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:basic-passwdcheck.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:basic-passwdcheck.c ****     GNU General Public License for more details.
  14:basic-passwdcheck.c **** 
  15:basic-passwdcheck.c ****     You should have received a copy of the GNU General Public License
  16:basic-passwdcheck.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17:basic-passwdcheck.c **** */
  18:basic-passwdcheck.c **** 
  19:basic-passwdcheck.c **** #include "hal.h"
  20:basic-passwdcheck.c **** #include <stdint.h>
  21:basic-passwdcheck.c **** #include <stdlib.h>
  22:basic-passwdcheck.c **** #include <stdio.h>
  23:basic-passwdcheck.c **** 
  24:basic-passwdcheck.c **** #define IDLE 0
  25:basic-passwdcheck.c **** #define KEY 1
  26:basic-passwdcheck.c **** #define PLAIN 2
  27:basic-passwdcheck.c **** 
  28:basic-passwdcheck.c **** #define BUFLEN 64
  29:basic-passwdcheck.c **** 
  30:basic-passwdcheck.c **** uint8_t memory[BUFLEN];
  31:basic-passwdcheck.c **** uint8_t tmp[BUFLEN];
  32:basic-passwdcheck.c **** char asciibuf[BUFLEN];
  33:basic-passwdcheck.c **** uint8_t pt[16];
  34:basic-passwdcheck.c **** 
  35:basic-passwdcheck.c **** static void delay_2_ms(void);
  36:basic-passwdcheck.c **** 
  37:basic-passwdcheck.c **** 
  38:basic-passwdcheck.c **** void my_puts(char *c)
  39:basic-passwdcheck.c **** {
  40:basic-passwdcheck.c ****   do {
  41:basic-passwdcheck.c ****     putch(*c);
  42:basic-passwdcheck.c **** 
  43:basic-passwdcheck.c ****   } while (*++c);
  44:basic-passwdcheck.c **** }
  45:basic-passwdcheck.c **** 
  46:basic-passwdcheck.c **** static void delay_2_ms()
  47:basic-passwdcheck.c **** {
  16               		.loc 1 47 1 view -0
  17               		.cfi_startproc
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 4
  21               		.cfi_offset 28, -3
  22 0002 DF93      		push r29
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 5
  25               		.cfi_offset 29, -4
  26 0004 0F92      		push __tmp_reg__
  27 0006 0F92      		push __tmp_reg__
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 7
  30 0008 CDB7      		in r28,__SP_L__
  31 000a DEB7      		in r29,__SP_H__
  32               	.LCFI3:
  33               		.cfi_def_cfa_register 28
  34               	/* prologue: function */
  35               	/* frame size = 2 */
  36               	/* stack size = 4 */
  37               	.L__stack_usage = 4
  48:basic-passwdcheck.c ****   for (volatile unsigned int i=0; i < 0xfff; i++ ){
  38               		.loc 1 48 3 view .LVU1
  39               	.LBB2:
  40               		.loc 1 48 8 view .LVU2
  41               		.loc 1 48 30 is_stmt 0 view .LVU3
  42 000c 1982      		std Y+1,__zero_reg__
  43 000e 1A82      		std Y+2,__zero_reg__
  44               	.L2:
  45               		.loc 1 48 35 is_stmt 1 discriminator 1 view .LVU4
  46               		.loc 1 48 37 is_stmt 0 discriminator 1 view .LVU5
  47 0010 8981      		ldd r24,Y+1
  48 0012 9A81      		ldd r25,Y+2
  49               		.loc 1 48 3 discriminator 1 view .LVU6
  50 0014 8F3F      		cpi r24,-1
  51 0016 9F40      		sbci r25,15
  52 0018 00F0      		brlo .L3
  53               	/* epilogue start */
  54               	.LBE2:
  49:basic-passwdcheck.c ****     ;
  50:basic-passwdcheck.c ****   }
  51:basic-passwdcheck.c **** }
  55               		.loc 1 51 1 view .LVU7
  56 001a 0F90      		pop __tmp_reg__
  57 001c 0F90      		pop __tmp_reg__
  58 001e DF91      		pop r29
  59 0020 CF91      		pop r28
  60 0022 0895      		ret
  61               	.L3:
  62               	.LBB3:
  49:basic-passwdcheck.c ****     ;
  63               		.loc 1 49 5 is_stmt 1 discriminator 3 view .LVU8
  48:basic-passwdcheck.c ****   for (volatile unsigned int i=0; i < 0xfff; i++ ){
  64               		.loc 1 48 46 discriminator 3 view .LVU9
  48:basic-passwdcheck.c ****   for (volatile unsigned int i=0; i < 0xfff; i++ ){
  65               		.loc 1 48 47 is_stmt 0 discriminator 3 view .LVU10
  66 0024 8981      		ldd r24,Y+1
  67 0026 9A81      		ldd r25,Y+2
  68 0028 0196      		adiw r24,1
  69 002a 8983      		std Y+1,r24
  70 002c 9A83      		std Y+2,r25
  71 002e 00C0      		rjmp .L2
  72               	.LBE3:
  73               		.cfi_endproc
  74               	.LFE13:
  76               	.global	my_puts
  78               	my_puts:
  79               	.LVL0:
  80               	.LFB12:
  39:basic-passwdcheck.c ****   do {
  81               		.loc 1 39 1 is_stmt 1 view -0
  82               		.cfi_startproc
  39:basic-passwdcheck.c ****   do {
  83               		.loc 1 39 1 is_stmt 0 view .LVU12
  84 0030 CF93      		push r28
  85               	.LCFI4:
  86               		.cfi_def_cfa_offset 4
  87               		.cfi_offset 28, -3
  88 0032 DF93      		push r29
  89               	.LCFI5:
  90               		.cfi_def_cfa_offset 5
  91               		.cfi_offset 29, -4
  92               	/* prologue: function */
  93               	/* frame size = 0 */
  94               	/* stack size = 2 */
  95               	.L__stack_usage = 2
  96 0034 EC01      		movw r28,r24
  97               	.LVL1:
  98               	.L5:
  40:basic-passwdcheck.c ****     putch(*c);
  99               		.loc 1 40 3 is_stmt 1 discriminator 1 view .LVU13
  41:basic-passwdcheck.c **** 
 100               		.loc 1 41 5 discriminator 1 view .LVU14
 101 0036 8991      		ld r24,Y+
 102               	.LVL2:
  41:basic-passwdcheck.c **** 
 103               		.loc 1 41 5 is_stmt 0 discriminator 1 view .LVU15
 104 0038 0E94 0000 		call output_ch_0
 105               	.LVL3:
  43:basic-passwdcheck.c **** }
 106               		.loc 1 43 11 is_stmt 1 discriminator 1 view .LVU16
  43:basic-passwdcheck.c **** }
 107               		.loc 1 43 3 is_stmt 0 discriminator 1 view .LVU17
 108 003c 8881      		ld r24,Y
 109 003e 8111      		cpse r24,__zero_reg__
 110 0040 00C0      		rjmp .L5
 111               	/* epilogue start */
  44:basic-passwdcheck.c **** 
 112               		.loc 1 44 1 view .LVU18
 113 0042 DF91      		pop r29
 114 0044 CF91      		pop r28
 115               	.LVL4:
  44:basic-passwdcheck.c **** 
 116               		.loc 1 44 1 view .LVU19
 117 0046 0895      		ret
 118               		.cfi_endproc
 119               	.LFE12:
 121               	.global	my_read
 123               	my_read:
 124               	.LVL5:
 125               	.LFB14:
  52:basic-passwdcheck.c **** 
  53:basic-passwdcheck.c **** void my_read(char *buf, int len)
  54:basic-passwdcheck.c **** {
 126               		.loc 1 54 1 is_stmt 1 view -0
 127               		.cfi_startproc
 128               		.loc 1 54 1 is_stmt 0 view .LVU21
 129 0048 AF92      		push r10
 130               	.LCFI6:
 131               		.cfi_def_cfa_offset 4
 132               		.cfi_offset 10, -3
 133 004a BF92      		push r11
 134               	.LCFI7:
 135               		.cfi_def_cfa_offset 5
 136               		.cfi_offset 11, -4
 137 004c CF92      		push r12
 138               	.LCFI8:
 139               		.cfi_def_cfa_offset 6
 140               		.cfi_offset 12, -5
 141 004e DF92      		push r13
 142               	.LCFI9:
 143               		.cfi_def_cfa_offset 7
 144               		.cfi_offset 13, -6
 145 0050 EF92      		push r14
 146               	.LCFI10:
 147               		.cfi_def_cfa_offset 8
 148               		.cfi_offset 14, -7
 149 0052 FF92      		push r15
 150               	.LCFI11:
 151               		.cfi_def_cfa_offset 9
 152               		.cfi_offset 15, -8
 153 0054 0F93      		push r16
 154               	.LCFI12:
 155               		.cfi_def_cfa_offset 10
 156               		.cfi_offset 16, -9
 157 0056 1F93      		push r17
 158               	.LCFI13:
 159               		.cfi_def_cfa_offset 11
 160               		.cfi_offset 17, -10
 161 0058 CF93      		push r28
 162               	.LCFI14:
 163               		.cfi_def_cfa_offset 12
 164               		.cfi_offset 28, -11
 165 005a DF93      		push r29
 166               	.LCFI15:
 167               		.cfi_def_cfa_offset 13
 168               		.cfi_offset 29, -12
 169               	/* prologue: function */
 170               	/* frame size = 0 */
 171               	/* stack size = 10 */
 172               	.L__stack_usage = 10
 173 005c EC01      		movw r28,r24
 174 005e 8B01      		movw r16,r22
  55:basic-passwdcheck.c ****   for(int i = 0; i < len; i++) {
 175               		.loc 1 55 3 is_stmt 1 view .LVU22
 176               	.LBB4:
 177               		.loc 1 55 7 view .LVU23
 178               	.LVL6:
 179               		.loc 1 55 7 is_stmt 0 view .LVU24
 180 0060 7C01      		movw r14,r24
 181               		.loc 1 55 11 view .LVU25
 182 0062 B12C      		mov r11,__zero_reg__
 183 0064 A12C      		mov r10,__zero_reg__
 184               	.LVL7:
 185               	.L8:
 186               		.loc 1 55 18 is_stmt 1 discriminator 1 view .LVU26
 187               		.loc 1 55 3 is_stmt 0 discriminator 1 view .LVU27
 188 0066 A016      		cp r10,r16
 189 0068 B106      		cpc r11,r17
 190 006a 04F4      		brge .L15
  56:basic-passwdcheck.c ****     while (buf[i] = getch(), buf[i] == '\0');
 191               		.loc 1 56 15 view .LVU28
 192 006c 6701      		movw r12,r14
 193               	.L9:
 194               		.loc 1 56 45 is_stmt 1 discriminator 1 view .LVU29
 195               		.loc 1 56 11 discriminator 1 view .LVU30
 196               		.loc 1 56 21 is_stmt 0 discriminator 1 view .LVU31
 197 006e 0E94 0000 		call input_ch_0
 198               	.LVL8:
 199               		.loc 1 56 19 discriminator 1 view .LVU32
 200 0072 F701      		movw r30,r14
 201 0074 8083      		st Z,r24
 202               		.loc 1 56 11 discriminator 1 view .LVU33
 203 0076 8823      		tst r24
 204 0078 01F0      		breq .L9
  57:basic-passwdcheck.c **** 
  58:basic-passwdcheck.c ****     if (buf[i] == '\n') {
 205               		.loc 1 58 5 is_stmt 1 view .LVU34
 206 007a FFEF      		ldi r31,-1
 207 007c EF1A      		sub r14,r31
 208 007e FF0A      		sbc r15,r31
 209               		.loc 1 58 8 is_stmt 0 view .LVU35
 210 0080 8A30      		cpi r24,lo8(10)
 211 0082 01F4      		brne .L10
  59:basic-passwdcheck.c ****       buf[i] = '\0';
 212               		.loc 1 59 7 is_stmt 1 view .LVU36
 213               		.loc 1 59 14 is_stmt 0 view .LVU37
 214 0084 F601      		movw r30,r12
 215 0086 1082      		st Z,__zero_reg__
  60:basic-passwdcheck.c ****       return;
 216               		.loc 1 60 7 is_stmt 1 view .LVU38
 217               	.LVL9:
 218               	.L7:
 219               	/* epilogue start */
 220               		.loc 1 60 7 is_stmt 0 view .LVU39
 221               	.LBE4:
  61:basic-passwdcheck.c ****     }
  62:basic-passwdcheck.c ****   }
  63:basic-passwdcheck.c ****   buf[len - 1] = '\0';
  64:basic-passwdcheck.c **** }
 222               		.loc 1 64 1 view .LVU40
 223 0088 DF91      		pop r29
 224 008a CF91      		pop r28
 225 008c 1F91      		pop r17
 226 008e 0F91      		pop r16
 227               	.LVL10:
 228               		.loc 1 64 1 view .LVU41
 229 0090 FF90      		pop r15
 230 0092 EF90      		pop r14
 231 0094 DF90      		pop r13
 232 0096 CF90      		pop r12
 233 0098 BF90      		pop r11
 234 009a AF90      		pop r10
 235               	.LVL11:
 236               		.loc 1 64 1 view .LVU42
 237 009c 0895      		ret
 238               	.LVL12:
 239               	.L10:
 240               	.LBB5:
  55:basic-passwdcheck.c ****     while (buf[i] = getch(), buf[i] == '\0');
 241               		.loc 1 55 27 is_stmt 1 discriminator 2 view .LVU43
  55:basic-passwdcheck.c ****     while (buf[i] = getch(), buf[i] == '\0');
 242               		.loc 1 55 28 is_stmt 0 discriminator 2 view .LVU44
 243 009e FFEF      		ldi r31,-1
 244 00a0 AF1A      		sub r10,r31
 245 00a2 BF0A      		sbc r11,r31
 246               	.LVL13:
  55:basic-passwdcheck.c ****     while (buf[i] = getch(), buf[i] == '\0');
 247               		.loc 1 55 28 discriminator 2 view .LVU45
 248 00a4 00C0      		rjmp .L8
 249               	.L15:
  55:basic-passwdcheck.c ****     while (buf[i] = getch(), buf[i] == '\0');
 250               		.loc 1 55 28 discriminator 2 view .LVU46
 251               	.LBE5:
  63:basic-passwdcheck.c **** }
 252               		.loc 1 63 3 is_stmt 1 view .LVU47
  63:basic-passwdcheck.c **** }
 253               		.loc 1 63 16 is_stmt 0 view .LVU48
 254 00a6 C00F      		add r28,r16
 255 00a8 D11F      		adc r29,r17
 256               	.LVL14:
  63:basic-passwdcheck.c **** }
 257               		.loc 1 63 16 view .LVU49
 258 00aa 2197      		sbiw r28,1
 259 00ac 1882      		st Y,__zero_reg__
 260 00ae 00C0      		rjmp .L7
 261               		.cfi_endproc
 262               	.LFE14:
 264               		.section	.rodata.str1.1,"aMS",@progbits,1
 265               	.LC1:
 266 0000 2A2A 2A2A 		.string	"*****Safe-o-matic 3000 Booting...\n"
 266      2A53 6166 
 266      652D 6F2D 
 266      6D61 7469 
 266      6320 3330 
 267               	.LC2:
 268 0023 416C 6967 		.string	"Aligning bits........[DONE]\n"
 268      6E69 6E67 
 268      2062 6974 
 268      732E 2E2E 
 268      2E2E 2E2E 
 269               	.LC3:
 270 0040 4368 6563 		.string	"Checking Cesium RNG..[DONE]\n"
 270      6B69 6E67 
 270      2043 6573 
 270      6975 6D20 
 270      524E 472E 
 271               	.LC4:
 272 005d 4D61 7371 		.string	"Masquerading flash...[DONE]\n"
 272      7565 7261 
 272      6469 6E67 
 272      2066 6C61 
 272      7368 2E2E 
 273               	.LC5:
 274 007a 4465 6372 		.string	"Decrypting database..[DONE]\n"
 274      7970 7469 
 274      6E67 2064 
 274      6174 6162 
 274      6173 652E 
 275               	.LC6:
 276 0097 0A0A 00   		.string	"\n\n"
 277               	.LC7:
 278 009a 5741 524E 		.string	"WARNING: UNAUTHORIZED ACCESS WILL BE PUNISHED\n"
 278      494E 473A 
 278      2055 4E41 
 278      5554 484F 
 278      5249 5A45 
 279               	.LC8:
 280 00c9 506C 6561 		.string	"Please enter password to continue: "
 280      7365 2065 
 280      6E74 6572 
 280      2070 6173 
 280      7377 6F72 
 281               	.LC9:
 282 00ed 5041 5353 		.string	"PASSWORD FAIL\n"
 282      574F 5244 
 282      2046 4149 
 282      4C0A 00
 283               	.LC10:
 284 00fc 4163 6365 		.string	"Access granted, Welcome!\n"
 284      7373 2067 
 284      7261 6E74 
 284      6564 2C20 
 284      5765 6C63 
 285               	.LC0:
 286 0116 6830 7078 		.string	"h0px3"
 286      3300 
 287               		.section	.text.startup,"ax",@progbits
 288               	.global	main
 290               	main:
 291               	.LFB15:
  65:basic-passwdcheck.c **** 
  66:basic-passwdcheck.c **** int main(void)
  67:basic-passwdcheck.c ****   {
 292               		.loc 1 67 3 is_stmt 1 view -0
 293               		.cfi_startproc
 294 0000 CDB7      		in r28,__SP_L__
 295 0002 DEB7      		in r29,__SP_H__
 296               	.LCFI16:
 297               		.cfi_def_cfa_register 28
 298 0004 A897      		sbiw r28,40
 299               	.LCFI17:
 300               		.cfi_def_cfa_offset 43
 301 0006 CDBF      		out __SP_L__,r28
 302 0008 DEBF      		out __SP_H__,r29
 303               	/* prologue: function */
 304               	/* frame size = 40 */
 305               	/* stack size = 40 */
 306               	.L__stack_usage = 40
  68:basic-passwdcheck.c ****     platform_init();
 307               		.loc 1 68 5 view .LVU51
 308 000a 0E94 0000 		call platform_init
 309               	.LVL15:
  69:basic-passwdcheck.c ****   init_uart();
 310               		.loc 1 69 3 view .LVU52
 311 000e 0E94 0000 		call init_uart0
 312               	.LVL16:
  70:basic-passwdcheck.c ****   trigger_setup();
 313               		.loc 1 70 3 view .LVU53
 314 0012 11E0      		ldi r17,lo8(1)
 315 0014 1093 0106 		sts 1537,r17
  71:basic-passwdcheck.c **** 
  72:basic-passwdcheck.c ****     char passwd[32];
 316               		.loc 1 72 5 view .LVU54
  73:basic-passwdcheck.c ****     char correct_passwd[] = "h0px3";
 317               		.loc 1 73 5 view .LVU55
 318               		.loc 1 73 10 is_stmt 0 view .LVU56
 319 0018 86E0      		ldi r24,lo8(6)
 320 001a E0E0      		ldi r30,lo8(.LC0)
 321 001c F0E0      		ldi r31,hi8(.LC0)
 322 001e DE01      		movw r26,r28
 323 0020 9196      		adiw r26,33
 324               		0:
 325 0022 0190      		ld r0,Z+
 326 0024 0D92      		st X+,r0
 327 0026 8A95      		dec r24
 328 0028 01F4      		brne 0b
  74:basic-passwdcheck.c **** 
  75:basic-passwdcheck.c ****   while(1){
 329               		.loc 1 75 3 is_stmt 1 view .LVU57
 330               	.LBB6:
  76:basic-passwdcheck.c **** 
  77:basic-passwdcheck.c ****         my_puts("*****Safe-o-matic 3000 Booting...\n");
 331               		.loc 1 77 9 view .LVU58
 332 002a 80E0      		ldi r24,lo8(.LC1)
 333 002c 90E0      		ldi r25,hi8(.LC1)
 334 002e 0E94 0000 		call my_puts
 335               	.LVL17:
  78:basic-passwdcheck.c ****         //Print some fancy-sounding stuff so that attackers
  79:basic-passwdcheck.c ****         //will get scared and leave us alone
  80:basic-passwdcheck.c ****         my_puts("Aligning bits........[DONE]\n");
 336               		.loc 1 80 9 view .LVU59
 337 0032 80E0      		ldi r24,lo8(.LC2)
 338 0034 90E0      		ldi r25,hi8(.LC2)
 339 0036 0E94 0000 		call my_puts
 340               	.LVL18:
  81:basic-passwdcheck.c ****         delay_2_ms();
 341               		.loc 1 81 9 view .LVU60
 342 003a 0E94 0000 		call delay_2_ms
 343               	.LVL19:
  82:basic-passwdcheck.c ****         my_puts("Checking Cesium RNG..[DONE]\n");
 344               		.loc 1 82 9 view .LVU61
 345 003e 80E0      		ldi r24,lo8(.LC3)
 346 0040 90E0      		ldi r25,hi8(.LC3)
 347 0042 0E94 0000 		call my_puts
 348               	.LVL20:
  83:basic-passwdcheck.c ****         delay_2_ms();
 349               		.loc 1 83 9 view .LVU62
 350 0046 0E94 0000 		call delay_2_ms
 351               	.LVL21:
  84:basic-passwdcheck.c ****         my_puts("Masquerading flash...[DONE]\n");
 352               		.loc 1 84 9 view .LVU63
 353 004a 80E0      		ldi r24,lo8(.LC4)
 354 004c 90E0      		ldi r25,hi8(.LC4)
 355 004e 0E94 0000 		call my_puts
 356               	.LVL22:
  85:basic-passwdcheck.c ****         delay_2_ms();
 357               		.loc 1 85 9 view .LVU64
 358 0052 0E94 0000 		call delay_2_ms
 359               	.LVL23:
  86:basic-passwdcheck.c ****         my_puts("Decrypting database..[DONE]\n");
 360               		.loc 1 86 9 view .LVU65
 361 0056 80E0      		ldi r24,lo8(.LC5)
 362 0058 90E0      		ldi r25,hi8(.LC5)
 363 005a 0E94 0000 		call my_puts
 364               	.LVL24:
  87:basic-passwdcheck.c ****         delay_2_ms();
 365               		.loc 1 87 9 view .LVU66
 366 005e 0E94 0000 		call delay_2_ms
 367               	.LVL25:
  88:basic-passwdcheck.c ****         my_puts("\n\n");
 368               		.loc 1 88 9 view .LVU67
 369 0062 80E0      		ldi r24,lo8(.LC6)
 370 0064 90E0      		ldi r25,hi8(.LC6)
 371 0066 0E94 0000 		call my_puts
 372               	.LVL26:
  89:basic-passwdcheck.c **** 
  90:basic-passwdcheck.c ****         //Give them one last warning
  91:basic-passwdcheck.c ****         my_puts("WARNING: UNAUTHORIZED ACCESS WILL BE PUNISHED\n");
 373               		.loc 1 91 9 view .LVU68
 374 006a 80E0      		ldi r24,lo8(.LC7)
 375 006c 90E0      		ldi r25,hi8(.LC7)
 376 006e 0E94 0000 		call my_puts
 377               	.LVL27:
  92:basic-passwdcheck.c **** 
  93:basic-passwdcheck.c ****         trigger_low();
 378               		.loc 1 93 9 view .LVU69
 379 0072 1093 0606 		sts 1542,r17
  94:basic-passwdcheck.c **** 
  95:basic-passwdcheck.c ****         //Get password
  96:basic-passwdcheck.c ****         my_puts("Please enter password to continue: ");
 380               		.loc 1 96 9 view .LVU70
 381 0076 80E0      		ldi r24,lo8(.LC8)
 382 0078 90E0      		ldi r25,hi8(.LC8)
 383 007a 0E94 0000 		call my_puts
 384               	.LVL28:
  97:basic-passwdcheck.c ****         my_read(passwd, 32);
 385               		.loc 1 97 9 view .LVU71
 386 007e 60E2      		ldi r22,lo8(32)
 387 0080 70E0      		ldi r23,0
 388 0082 CE01      		movw r24,r28
 389 0084 0196      		adiw r24,1
 390 0086 0E94 0000 		call my_read
 391               	.LVL29:
  98:basic-passwdcheck.c **** 
  99:basic-passwdcheck.c ****         uint8_t passbad = 0;
 392               		.loc 1 99 9 view .LVU72
 100:basic-passwdcheck.c **** 
 101:basic-passwdcheck.c ****         trigger_high();
 393               		.loc 1 101 9 view .LVU73
 394 008a 1093 0506 		sts 1541,r17
 102:basic-passwdcheck.c **** 
 103:basic-passwdcheck.c ****         for(uint8_t i = 0; i < sizeof(correct_passwd); i++){
 395               		.loc 1 103 9 view .LVU74
 396               	.LBB7:
 397               		.loc 1 103 13 view .LVU75
 398               	.LVL30:
 399               		.loc 1 103 28 view .LVU76
 400 008e FE01      		movw r30,r28
 401 0090 3196      		adiw r30,1
 402               	.LBE7:
 101:basic-passwdcheck.c **** 
 403               		.loc 1 101 9 is_stmt 0 view .LVU77
 404 0092 DE01      		movw r26,r28
 405 0094 9196      		adiw r26,33
 406               	.LBB8:
 407               		.loc 1 103 9 view .LVU78
 408 0096 8C2F      		mov r24,r28
 409 0098 895D      		subi r24,lo8(-(39))
 410               	.LVL31:
 411               	.L18:
 104:basic-passwdcheck.c ****             if (correct_passwd[i] != passwd[i]){
 412               		.loc 1 104 13 is_stmt 1 view .LVU79
 413               		.loc 1 104 31 is_stmt 0 view .LVU80
 414 009a 2D91      		ld r18,X+
 415               		.loc 1 104 44 view .LVU81
 416 009c 9191      		ld r25,Z+
 417               		.loc 1 104 16 view .LVU82
 418 009e 2913      		cpse r18,r25
 419 00a0 00C0      		rjmp .L17
 103:basic-passwdcheck.c ****             if (correct_passwd[i] != passwd[i]){
 420               		.loc 1 103 56 is_stmt 1 discriminator 2 view .LVU83
 103:basic-passwdcheck.c ****             if (correct_passwd[i] != passwd[i]){
 421               		.loc 1 103 28 discriminator 2 view .LVU84
 103:basic-passwdcheck.c ****             if (correct_passwd[i] != passwd[i]){
 422               		.loc 1 103 9 is_stmt 0 discriminator 2 view .LVU85
 423 00a2 8A13      		cpse r24,r26
 424 00a4 00C0      		rjmp .L18
 103:basic-passwdcheck.c ****             if (correct_passwd[i] != passwd[i]){
 425               		.loc 1 103 9 discriminator 2 view .LVU86
 426               	.LBE8:
 105:basic-passwdcheck.c ****                 passbad = 1;
 106:basic-passwdcheck.c ****                 break;
 107:basic-passwdcheck.c ****             }
 108:basic-passwdcheck.c ****         }
 109:basic-passwdcheck.c **** 
 110:basic-passwdcheck.c ****         if (passbad){
 427               		.loc 1 110 9 is_stmt 1 view .LVU87
 111:basic-passwdcheck.c ****             //Stop them fancy timing attacks
 112:basic-passwdcheck.c ****              int wait = rand() % 100000; //% 100000 can be removed for xmega
 113:basic-passwdcheck.c ****             for(volatile int i = 0; i < wait; i++){
 114:basic-passwdcheck.c ****                 ;
 115:basic-passwdcheck.c ****             }
 116:basic-passwdcheck.c ****             delay_2_ms();
 117:basic-passwdcheck.c ****             delay_2_ms();
 118:basic-passwdcheck.c ****             my_puts("PASSWORD FAIL\n");
 119:basic-passwdcheck.c ****             led_error(1);
 120:basic-passwdcheck.c ****         } else {
 121:basic-passwdcheck.c ****             my_puts("Access granted, Welcome!\n");
 428               		.loc 1 121 13 view .LVU88
 429 00a6 80E0      		ldi r24,lo8(.LC10)
 430 00a8 90E0      		ldi r25,hi8(.LC10)
 431 00aa 0E94 0000 		call my_puts
 432               	.LVL32:
 433 00ae 00C0      		rjmp .L21
 434               	.LVL33:
 435               	.L20:
 436               	.LBB9:
 437               	.LBB10:
 114:basic-passwdcheck.c ****             }
 438               		.loc 1 114 17 discriminator 3 view .LVU89
 113:basic-passwdcheck.c ****                 ;
 439               		.loc 1 113 47 discriminator 3 view .LVU90
 113:basic-passwdcheck.c ****                 ;
 440               		.loc 1 113 48 is_stmt 0 discriminator 3 view .LVU91
 441 00b0 8FA1      		ldd r24,Y+39
 442 00b2 98A5      		ldd r25,Y+40
 443 00b4 0196      		adiw r24,1
 444 00b6 8FA3      		std Y+39,r24
 445 00b8 98A7      		std Y+40,r25
 446               	.L22:
 113:basic-passwdcheck.c ****                 ;
 447               		.loc 1 113 37 is_stmt 1 discriminator 1 view .LVU92
 113:basic-passwdcheck.c ****                 ;
 448               		.loc 1 113 39 is_stmt 0 discriminator 1 view .LVU93
 449 00ba 8FA1      		ldd r24,Y+39
 450 00bc 98A5      		ldd r25,Y+40
 113:basic-passwdcheck.c ****                 ;
 451               		.loc 1 113 13 discriminator 1 view .LVU94
 452 00be 8217      		cp r24,r18
 453 00c0 9307      		cpc r25,r19
 454 00c2 04F0      		brlt .L20
 455               	.LBE10:
 116:basic-passwdcheck.c ****             delay_2_ms();
 456               		.loc 1 116 13 is_stmt 1 view .LVU95
 457 00c4 0E94 0000 		call delay_2_ms
 458               	.LVL34:
 117:basic-passwdcheck.c ****             my_puts("PASSWORD FAIL\n");
 459               		.loc 1 117 13 view .LVU96
 460 00c8 0E94 0000 		call delay_2_ms
 461               	.LVL35:
 118:basic-passwdcheck.c ****             led_error(1);
 462               		.loc 1 118 13 view .LVU97
 463 00cc 80E0      		ldi r24,lo8(.LC9)
 464 00ce 90E0      		ldi r25,hi8(.LC9)
 465 00d0 0E94 0000 		call my_puts
 466               	.LVL36:
 119:basic-passwdcheck.c ****         } else {
 467               		.loc 1 119 25 view .LVU98
 468               	.L21:
 469               	.L25:
 119:basic-passwdcheck.c ****         } else {
 470               		.loc 1 119 25 is_stmt 0 view .LVU99
 471               	.LBE9:
 122:basic-passwdcheck.c ****             led_ok(1);
 472               		.loc 1 122 22 is_stmt 1 discriminator 1 view .LVU100
 123:basic-passwdcheck.c ****         }
 124:basic-passwdcheck.c **** 
 125:basic-passwdcheck.c ****         //All done;
 126:basic-passwdcheck.c ****         while(1);
 473               		.loc 1 126 9 discriminator 1 view .LVU101
 474               		.loc 1 126 17 discriminator 1 view .LVU102
 475               		.loc 1 126 14 discriminator 1 view .LVU103
 476 00d4 00C0      		rjmp .L25
 477               	.LVL37:
 478               	.L17:
 110:basic-passwdcheck.c ****             //Stop them fancy timing attacks
 479               		.loc 1 110 9 view .LVU104
 480               	.LBB12:
 112:basic-passwdcheck.c ****             for(volatile int i = 0; i < wait; i++){
 481               		.loc 1 112 14 view .LVU105
 112:basic-passwdcheck.c ****             for(volatile int i = 0; i < wait; i++){
 482               		.loc 1 112 25 is_stmt 0 view .LVU106
 483 00d6 0E94 0000 		call rand
 484               	.LVL38:
 485 00da 9C01      		movw r18,r24
 486               	.LVL39:
 113:basic-passwdcheck.c ****                 ;
 487               		.loc 1 113 13 is_stmt 1 view .LVU107
 488               	.LBB11:
 113:basic-passwdcheck.c ****                 ;
 489               		.loc 1 113 17 view .LVU108
 113:basic-passwdcheck.c ****                 ;
 490               		.loc 1 113 30 is_stmt 0 view .LVU109
 491 00dc 1FA2      		std Y+39,__zero_reg__
 492 00de 18A6      		std Y+40,__zero_reg__
 113:basic-passwdcheck.c ****                 ;
 493               		.loc 1 113 13 view .LVU110
 494 00e0 00C0      		rjmp .L22
 495               	.LBE11:
 496               	.LBE12:
 497               	.LBE6:
 498               		.cfi_endproc
 499               	.LFE15:
 501               		.comm	pt,16,1
 502               		.comm	asciibuf,64,1
 503               		.comm	tmp,64,1
 504               		.comm	memory,64,1
 505               		.text
 506               	.Letext0:
 507               		.file 2 "/usr/local/Cellar/avr-gcc/9.3.0/avr/include/stdint.h"
 508               		.file 3 "/usr/local/Cellar/avr-gcc/9.3.0/avr/include/avr/iox128d3.h"
 509               		.file 4 "/usr/local/Cellar/avr-gcc/9.3.0/lib/avr-gcc/9/gcc/avr/9.3.0/include/stddef.h"
 510               		.file 5 "/usr/local/Cellar/avr-gcc/9.3.0/avr/include/stdlib.h"
 511               		.file 6 "/usr/local/Cellar/avr-gcc/9.3.0/avr/include/stdio.h"
 512               		.file 7 ".././hal/hal.h"
 513               		.file 8 ".././hal/xmega/uart.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 basic-passwdcheck.c
/var/folders/k6/th7ms_x56q93d_45_7qvs5nw0000gn/T//ccaTwmP0.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/k6/th7ms_x56q93d_45_7qvs5nw0000gn/T//ccaTwmP0.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/k6/th7ms_x56q93d_45_7qvs5nw0000gn/T//ccaTwmP0.s:4      *ABS*:000000000000003f __SREG__
/var/folders/k6/th7ms_x56q93d_45_7qvs5nw0000gn/T//ccaTwmP0.s:5      *ABS*:000000000000003b __RAMPZ__
/var/folders/k6/th7ms_x56q93d_45_7qvs5nw0000gn/T//ccaTwmP0.s:6      *ABS*:0000000000000034 __CCP__
/var/folders/k6/th7ms_x56q93d_45_7qvs5nw0000gn/T//ccaTwmP0.s:7      *ABS*:0000000000000000 __tmp_reg__
/var/folders/k6/th7ms_x56q93d_45_7qvs5nw0000gn/T//ccaTwmP0.s:8      *ABS*:0000000000000001 __zero_reg__
/var/folders/k6/th7ms_x56q93d_45_7qvs5nw0000gn/T//ccaTwmP0.s:13     .text:0000000000000000 delay_2_ms
/var/folders/k6/th7ms_x56q93d_45_7qvs5nw0000gn/T//ccaTwmP0.s:78     .text:0000000000000030 my_puts
/var/folders/k6/th7ms_x56q93d_45_7qvs5nw0000gn/T//ccaTwmP0.s:123    .text:0000000000000048 my_read
/var/folders/k6/th7ms_x56q93d_45_7qvs5nw0000gn/T//ccaTwmP0.s:290    .text.startup:0000000000000000 main
                            *COM*:0000000000000010 pt
                            *COM*:0000000000000040 asciibuf
                            *COM*:0000000000000040 tmp
                            *COM*:0000000000000040 memory

UNDEFINED SYMBOLS
output_ch_0
input_ch_0
platform_init
init_uart0
rand
__do_copy_data
__do_clear_bss
